'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


Partial Public Class DataClasses1DataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  #End Region
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property WO_HISTORies() As System.Data.Linq.Table(Of WO_HISTORY)
		Get
			Return Me.GetTable(Of WO_HISTORY)
		End Get
	End Property
	
	Public ReadOnly Property WO_FORECASTs() As System.Data.Linq.Table(Of WO_FORECAST)
		Get
			Return Me.GetTable(Of WO_FORECAST)
		End Get
	End Property
	
	Public ReadOnly Property RAWDATAs() As System.Data.Linq.Table(Of RAWDATA)
		Get
			Return Me.GetTable(Of RAWDATA)
		End Get
	End Property
	
	Public ReadOnly Property ForecastRecords() As System.Data.Linq.Table(Of ForecastRecord)
		Get
			Return Me.GetTable(Of ForecastRecord)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
Partial Public Class WO_HISTORY
	
	Private _YEAR As Integer
	
	Private _WEEK As Integer
	
	Private _WO_QTY As Integer
	
	Private _ORDER_QTY As Integer
	
	Private _ADV_STOCK_PRICE As Double
	
	Private _DAX_STOCK_PRICE As Double
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR")>  _
	Public Property YEAR() As Integer
		Get
			Return Me._YEAR
		End Get
		Set
			If ((Me._YEAR = value)  _
						= false) Then
				Me._YEAR = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEEK")>  _
	Public Property WEEK() As Integer
		Get
			Return Me._WEEK
		End Get
		Set
			If ((Me._WEEK = value)  _
						= false) Then
				Me._WEEK = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WO_QTY")>  _
	Public Property WO_QTY() As Integer
		Get
			Return Me._WO_QTY
		End Get
		Set
			If ((Me._WO_QTY = value)  _
						= false) Then
				Me._WO_QTY = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORDER_QTY")>  _
	Public Property ORDER_QTY() As Integer
		Get
			Return Me._ORDER_QTY
		End Get
		Set
			If ((Me._ORDER_QTY = value)  _
						= false) Then
				Me._ORDER_QTY = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADV_STOCK_PRICE")>  _
	Public Property ADV_STOCK_PRICE() As Double
		Get
			Return Me._ADV_STOCK_PRICE
		End Get
		Set
			If ((Me._ADV_STOCK_PRICE = value)  _
						= false) Then
				Me._ADV_STOCK_PRICE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DAX_STOCK_PRICE")>  _
	Public Property DAX_STOCK_PRICE() As Double
		Get
			Return Me._DAX_STOCK_PRICE
		End Get
		Set
			If ((Me._DAX_STOCK_PRICE = value)  _
						= false) Then
				Me._DAX_STOCK_PRICE = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
Partial Public Class WO_FORECAST
	
	Private _YEAR As Integer
	
	Private _WEEK As Integer
	
	Private _WO_QTY As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR")>  _
	Public Property YEAR() As Integer
		Get
			Return Me._YEAR
		End Get
		Set
			If ((Me._YEAR = value)  _
						= false) Then
				Me._YEAR = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEEK")>  _
	Public Property WEEK() As Integer
		Get
			Return Me._WEEK
		End Get
		Set
			If ((Me._WEEK = value)  _
						= false) Then
				Me._WEEK = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WO_QTY")>  _
	Public Property WO_QTY() As Integer
		Get
			Return Me._WO_QTY
		End Get
		Set
			If ((Me._WO_QTY = value)  _
						= false) Then
				Me._WO_QTY = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
Partial Public Class RAWDATA
	
	Private _Y As Integer
	
	Private _W As Integer
	
	Private _V As Double
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Y")>  _
	Public Property Y() As Integer
		Get
			Return Me._Y
		End Get
		Set
			If ((Me._Y = value)  _
						= false) Then
				Me._Y = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_W")>  _
	Public Property W() As Integer
		Get
			Return Me._W
		End Get
		Set
			If ((Me._W = value)  _
						= false) Then
				Me._W = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_V")>  _
	Public Property V() As Double
		Get
			Return Me._V
		End Get
		Set
			If ((Me._V = value)  _
						= false) Then
				Me._V = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
Partial Public Class ForecastRecord
	
	Private _Year As Integer
	
	Private _Week As Integer
	
	Private _Forecast As Decimal
	
	Private _Low80 As Decimal
	
	Private _High80 As Decimal
	
	Private _Low95 As Decimal
	
	Private _High95 As Decimal
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year")>  _
	Public Property Year() As Integer
		Get
			Return Me._Year
		End Get
		Set
			If ((Me._Year = value)  _
						= false) Then
				Me._Year = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Week")>  _
	Public Property Week() As Integer
		Get
			Return Me._Week
		End Get
		Set
			If ((Me._Week = value)  _
						= false) Then
				Me._Week = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Forecast")>  _
	Public Property Forecast() As Decimal
		Get
			Return Me._Forecast
		End Get
		Set
			If ((Me._Forecast = value)  _
						= false) Then
				Me._Forecast = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Low80")>  _
	Public Property Low80() As Decimal
		Get
			Return Me._Low80
		End Get
		Set
			If ((Me._Low80 = value)  _
						= false) Then
				Me._Low80 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_High80")>  _
	Public Property High80() As Decimal
		Get
			Return Me._High80
		End Get
		Set
			If ((Me._High80 = value)  _
						= false) Then
				Me._High80 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Low95")>  _
	Public Property Low95() As Decimal
		Get
			Return Me._Low95
		End Get
		Set
			If ((Me._Low95 = value)  _
						= false) Then
				Me._Low95 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_High95")>  _
	Public Property High95() As Decimal
		Get
			Return Me._High95
		End Get
		Set
			If ((Me._High95 = value)  _
						= false) Then
				Me._High95 = value
			End If
		End Set
    End Property

    Public Property ForecastDate As Date

End Class
